---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: eks-cluster-crossplane
  title: Kubernetes Cluster with Crossplane
  description: Create a new Kubernetes cluster using Crossplane
  tags:
    - kubernetes
    - crossplane
    - infrastructure
spec:
  owner: platform-team
  type: infrastructure
  parameters:
    - title: Cluster Configuration
      required:
        - name
        - environment
        - clusterType
      properties:
        name:
          title: Cluster Name
          type: string
          pattern: '^[a-z0-9-]+$'
          description: Name for your cluster (lowercase, numbers, hyphens only)
        environment:
          title: Environment
          type: string
          enum:
            - dev
            - staging
            - prod
          default: dev
          description: Target environment for the cluster
        clusterType:
          title: Cluster Type
          type: string
          enum:
            - eks
          default: eks
          description: Kubernetes platform type
        clusterVariant:
          title: Cluster Variant
          type: string
          enum:
            - standard
            - gpu-enabled
            - cost-optimized
            - high-availability
          default: standard
          description: Type of cluster configuration to deploy

    - title: AWS Configuration
      properties:
        region:
          title: AWS Region
          type: string
          default: us-east-2
          enum:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - eu-west-1
            - eu-central-1
        awsAccountId:
          title: AWS Account ID
          type: string
          description: AWS Account ID for IAM ARN construction
          default: "635314249418"
          pattern: "^[0-9]{12}$"

    - title: Node Group Configuration
      properties:
        nodeCount:
          title: Desired Node Count
          type: integer
          default: 1
          minimum: 1
          maximum: 10
          description: Initial number of nodes in the node group
        nodeMinSize:
          title: Minimum Node Count
          type: integer
          default: 1
          minimum: 1
          maximum: 10
          description: Minimum number of nodes for auto-scaling
        nodeMaxSize:
          title: Maximum Node Count
          type: integer
          default: 3
          minimum: 1
          maximum: 20
          description: Maximum number of nodes for auto-scaling
        nodeSize:
          title: Node Instance Type
          type: string
          default: t3.medium
          enum:
            - t3.small
            - t3.medium
            - t3.large
            - t3.xlarge
            - m5.large
            - m5.xlarge
            - m5.2xlarge
            - c5.large
            - c5.xlarge
            - c5.2xlarge
          description: EC2 instance type for worker nodes
        capacityType:
          title: Node Capacity Type
          type: string
          enum:
            - ON_DEMAND
            - SPOT
          default: ON_DEMAND
          description: Capacity type for nodes (On-Demand or Spot instances)
        diskSize:
          title: Node Disk Size (GB)
          type: integer
          default: 20
          minimum: 20
          maximum: 100
          description: EBS volume size for each node

    - title: Access Configuration
      properties:
        endpointPrivateAccess:
          title: Enable Private Endpoint Access
          type: boolean
          default: false
          description: Enable private API server endpoint
        endpointPublicAccess:
          title: Enable Public Endpoint Access
          type: boolean
          default: true
          description: Enable public API server endpoint
        adminAccessEntryName1:
          title: Admin Principal Name (Optional)
          type: string
          description: "Name of IAM user or role for full admin access"
          default: chicken
        adminAccessEntryType1:
          title: Admin Principal Type
          type: string
          enum:
            - role
            - user
          default: user
          description: "Type of admin principal"
        readOnlyAccessEntryName1:
          title: ReadOnly Principal Name (Optional)
          type: string
          description: "Name of IAM user or role for read-only access"
        readOnlyAccessEntryType1:
          title: ReadOnly Principal Type
          type: string
          enum:
            - role
            - user
          default: role
          description: "Type of readonly principal"

  steps:
    - id: fetch-cluster-template
      name: Fetch Cluster Template
      action: fetch:template
      input:
        url: ./templates/${{ parameters.clusterType }}/${{ parameters.clusterVariant }}
        values:
          name: ${{ parameters.name }}
          environment: ${{ parameters.environment }}
          clusterType: ${{ parameters.clusterType }}
          clusterVariant: ${{ parameters.clusterVariant }}
          region: ${{ parameters.region }}
          awsAccountId: ${{ parameters.awsAccountId }}
          nodeCount: ${{ parameters.nodeCount }}
          nodeMinSize: ${{ parameters.nodeMinSize }}
          nodeMaxSize: ${{ parameters.nodeMaxSize }}
          nodeSize: ${{ parameters.nodeSize }}
          capacityType: ${{ parameters.capacityType }}
          diskSize: ${{ parameters.diskSize }}
          endpointPrivateAccess: ${{ parameters.endpointPrivateAccess }}
          endpointPublicAccess: ${{ parameters.endpointPublicAccess }}
          adminAccessEntryName1: ${{ parameters.adminAccessEntryName1 }}
          adminAccessEntryType1: ${{ parameters.adminAccessEntryType1 }}
          readOnlyAccessEntryName1: ${{ parameters.readOnlyAccessEntryName1 }}
          readOnlyAccessEntryType1: ${{ parameters.readOnlyAccessEntryType1 }}

    - id: publish-pr
      name: Create Pull Request
      action: publish:github:pull-request
      input:
        repoUrl: github.com?owner=SkylarHoughtonGithub&repo=skylab-backstage-configs
        branchName: add-${{ parameters.environment }}-${{ parameters.clusterType }}-${{ parameters.clusterVariant }}-${{ parameters.name }}-infra
        title: 'Add ${{ parameters.clusterVariant }} EKS cluster: ${{ parameters.name }}'
        description: |
          ## New EKS Cluster Infrastructure
          
          - **Cluster Name**: ${{ parameters.name }}
          - **Environment**: ${{ parameters.environment }}
          - **Cluster Type**: ${{ parameters.clusterType }}
          - **Variant**: ${{ parameters.clusterVariant }}
          - **Region**: ${{ parameters.region }}
          - **Node Count**: ${{ parameters.nodeCount }} (min: ${{ parameters.nodeMinSize }}, max: ${{ parameters.nodeMaxSize }})
          - **Node Size**: ${{ parameters.nodeSize }}
          - **Capacity Type**: ${{ parameters.capacityType }}
          
          ### Access Configuration
          {%- if parameters.adminAccessEntryName1 %}
          - **Admin Access**: ${{ parameters.adminAccessEntryName1 }} (${{ parameters.adminAccessEntryType1 }}) - AmazonEKSClusterAdminPolicy
          {%- endif %}
          {%- if parameters.readOnlyAccessEntryName1 %}
          - **ReadOnly Access**: ${{ parameters.readOnlyAccessEntryName1 }} (${{ parameters.readOnlyAccessEntryType1 }}) - AmazonEKSAdminViewPolicy
          {%- endif %}
          
          ### Components Created
          - **Network composition** (VPC, subnets, security groups, routing)
          - **RBAC composition** (IAM roles and policies for EKS)
          - **EKS cluster composition** (cluster, node group, add-ons)
          {%- if parameters.adminAccessEntryName1 %}
          - **Admin access composition** (admin access entry + policy association)
          {%- endif %}
          {%- if parameters.readOnlyAccessEntryName1 %}
          - **ReadOnly access composition** (readonly access entry + policy association)
          {%- endif %}
          
          This PR adds new modular cluster infrastructure to `${{ parameters.environment }}/${{ parameters.clusterType }}/${{ parameters.clusterVariant }}/${{ parameters.name }}/infra/crossplane/`
          
          The cluster will be managed by Crossplane and deployed via ArgoCD ApplicationSet.
        targetPath: ${{ parameters.environment }}/${{ parameters.clusterType }}/${{ parameters.clusterVariant }}/${{ parameters.name }}/infra/crossplane

    - id: wait-for-merge
      name: Wait for PR to be merged
      action: debug:wait
      input:
        seconds: 15

    - id: register
      name: Register in Catalog
      action: catalog:register
      input:
        catalogInfoUrl: https://github.com/SkylarHoughtonGithub/skylab-backstage-configs/blob/main/${{ parameters.environment }}/${{ parameters.clusterType }}/${{ parameters.clusterVariant }}/${{ parameters.name }}/infra/crossplane/catalog-info.yaml

    - id: completion-message
      name: Cluster Creation Complete
      action: debug:log
      input:
        message: |
          EKS Cluster Infrastructure Create